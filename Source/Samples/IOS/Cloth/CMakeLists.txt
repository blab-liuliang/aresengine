# 库依赖
MESSAGE(STATUS "Samples 3rdParty Dependences:")
FIND_PACKAGE(Boost 1.5.2 REQUIRED)
MESSAGE(STATUS "Boost Include Directory:" ${Boost_INCLUDE_DIRS})
MESSAGE(STATUS "Boost Library Directory:" ${Boost_LIBRARY_DIRS})

# 附加包含目录
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Include)

# Macro ADD_FRAMEWORK
MACRO(ADD_FRAMEWORK fwname appname)
    FIND_LIBRARY(FRAMEWORK_${fwname}
        NAMES ${fwname}
        PATHS ${CMAKE_OSX_SYSROOT}/System/Library
        PATH_SUFFIXES Frameworks
        NO_DEFAULT_PATH)
    IF( ${FRAMEWORK_${fwname}} STREQUAL FRAMEWORK_${fwname}-NOTFOUND)
        MESSAGE(ERROR ": Framework ${fwname} not found")
    ELSE()
        TARGET_LINK_LIBRARIES(${appname} ${FRAMEWORK_${fwname}})
        MESSAGE(STATUS "Framework ${fwname} found at ${FRAMEWORK_${fwname}}")
    ENDIF()
ENDMACRO(ADD_FRAMEWORK)

# 添加预处理器
IF(WIN32)
	ADD_DEFINITIONS(-DPLATFORM_WIN32)
ELSEIF(APPLE)
	IF(${CMAKE_OSX_SYSROOT} MATCHES "MacOSX.platform")
		ADD_DEFINITIONS(-DPLATFORM_MAC)
	ELSE()
		ADD_DEFINITIONS(-DPLATFORM_IOS)
	ENDIF()
ENDIF()

# 设置模块名称
SET(MODULE_NAME Cloth)

# 源文件路径
SET(MODULE_HEADER_PATH		${PROJECT_SOURCE_DIR}/Source/Samples/IOS/${MODULE_NAME})
SET(MODULE_SOURCE_PATH		${PROJECT_SOURCE_DIR}/Source/Samples/IOS/${MODULE_NAME})

INCLUDE_DIRECTORIES( ${MODULE_SOURCE_PATH})

# VS配置 http://www.oschina.net/code/explore/mariadb-5.2.4/CMakeLists.txt
IF(MSVC)
	# 禁用特定警告
	SET(CMAKE_CXX_FLAGS_DEBUG			"${CMAKE_CXX_FLAGS_DEBUG} /wd4996 /wd4819")
    SET(CMAKE_CXX_FLAGS_RELEASE			"${CMAKE_CXX_FLAGS_RELEASE} /wd4996 /wd4819")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO	"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_DEBUG				"${CMAKE_C_FLAGS_DEBUG} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELEASE			"${CMAKE_C_FLAGS_RELEASE} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")

	# MT MTD
	STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELEASE          ${CMAKE_C_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELWITHDEBINFO   ${CMAKE_C_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG            ${CMAKE_C_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG_INIT       ${CMAKE_C_FLAGS_DEBUG_INIT})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELEASE        ${CMAKE_CXX_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG          ${CMAKE_CXX_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG_INIT     ${CMAKE_CXX_FLAGS_DEBUG_INIT})
ENDIF(MSVC)

# 包含源文件
SET(MODULE_LOGIC_CLASSES_SOURCE_FILES
	${MODULE_SOURCE_PATH}/AresGame.h
	${MODULE_SOURCE_PATH}/AresGame.cpp
	${MODULE_SOURCE_PATH}/MyGame.h
	${MODULE_SOURCE_PATH}/MyGame.cpp
    ${MODULE_SOURCE_PATH}/CameraLogic.h
    ${MODULE_SOURCE_PATH}/CameraLogic.cpp
    ${MODULE_SOURCE_PATH}/BaseCamera.h
    ${MODULE_SOURCE_PATH}/BaseCamera.cpp
)
SET(MODULE_IOS_SOURCES
	${MODULE_SOURCE_PATH}/main.m
	${MODULE_SOURCE_PATH}/GLView.h
	${MODULE_SOURCE_PATH}/GLView.mm
	${MODULE_SOURCE_PATH}/HelloArrow_Prefix.pch
	${MODULE_SOURCE_PATH}/AresAppDelegate.h
	${MODULE_SOURCE_PATH}/AresAppDelegate.mm
)
SET(MODULE_RESOURCES
    ${MODULE_SOURCE_PATH}/Icon.png
    ${MODULE_SOURCE_PATH}/Default.png
)

SET(LOGIC_ALL_SOURCE_FILES
	${MODULE_LOGIC_CLASSES_SOURCE_FILES}
    ${MODULE_IOS_SOURCES}
    ${MODULE_RESOURCES}
)

SOURCE_GROUP("Classes"	 FILES ${MODULE_LOGIC_CLASSES_SOURCE_FILES})
SOURCE_GROUP("IOS"       FILES ${MODULE_IOS_SOURCES})
SOURCE_GROUP("Resources" FILES ${MODULE_RESOURCES})

# 添加库
ADD_EXECUTABLE(${MODULE_NAME} MACOSX_BUNDLE
	${LOGIC_ALL_SOURCE_FILES}
)

# 链接库
TARGET_LINK_LIBRARIES(${MODULE_NAME} AresCore)
TARGET_LINK_LIBRARIES(${MODULE_NAME} AresPhysics)
TARGET_LINK_LIBRARIES(${MODULE_NAME} Ares3DEngine)
TARGET_LINK_LIBRARIES(${MODULE_NAME} tolua++)

# 链接库
IF(WIN32)
	ADD_DEFINITIONS(-DPLATFORM_WIN32)
ELSEIF(APPLE)
	IF(${CMAKE_OSX_SYSROOT} MATCHES "MacOSX.platform")
	ELSE()
        ADD_FRAMEWORK( QuartzCore   ${MODULE_NAME})
        ADD_FRAMEWORK( UIKit        ${MODULE_NAME})
        ADD_FRAMEWORK( Foundation   ${MODULE_NAME})
        ADD_FRAMEWORK( CoreGraphics ${MODULE_NAME})
        ADD_FRAMEWORK( boost        ${MODULE_NAME})
        ADD_FRAMEWORK( OpenGLES     ${MODULE_NAME})
        
        TARGET_LINK_LIBRARIES(${MODULE_NAME} Plugin_OpenGLES)
	ENDIF()
ENDIF()

IF(MSVC)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} dxguid)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} dinput8)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} debug fmodexL_vc  optimized fmodex_vc)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} debug freetype_d  optimized freetype)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} Plugin_D3D11)
ENDIF(MSVC)

# 设置属性
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "Samples")
