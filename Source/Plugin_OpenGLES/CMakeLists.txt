# ¿âÒÀÀµ
MESSAGE(STATUS "Plugin_OpenGLES 3rdParty Dependences:")
FIND_PACKAGE(Boost 1.5.2 REQUIRED)
MESSAGE(STATUS "Boost Include Directory:" ${Boost_INCLUDE_DIRS})
MESSAGE(STATUS "Boost Library Directory:" ${Boost_LIBRARY_DIRS})

# Ìí¼ÓÔ¤±àÒëºê
IF(WIN32)
	ADD_DEFINITIONS(-DOPENGLES_EXPORTS)
ENDIF()

# Ìí¼ÓÔ¤´¦ÀíÆ÷
IF(WIN32)
	ADD_DEFINITIONS(-DPLATFORM_WIN32)
ELSEIF(APPLE)
	IF(${CMAKE_OSX_SYSROOT} MATCHES "MacOSX.platform")
		ADD_DEFINITIONS(-DPLATFORM_MAC)
	ELSE()
		ADD_DEFINITIONS(-DPLATFORM_IOS)
	ENDIF()
ENDIF()

# ¸½¼Ó°üº¬Ä¿Â¼
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Include)

# ¸½¼Ó¿âÄ¿Â¼
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})

# VSÅäÖÃ http://www.oschina.net/code/explore/mariadb-5.2.4/CMakeLists.txt
IF(MSVC)
	# ½ûÓÃÌØ¶¨¾¯¸æ
	SET(CMAKE_CXX_FLAGS_DEBUG			"${CMAKE_CXX_FLAGS_DEBUG} /wd4996 /wd4819")
    SET(CMAKE_CXX_FLAGS_RELEASE			"${CMAKE_CXX_FLAGS_RELEASE} /wd4996 /wd4819")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO	"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_DEBUG				"${CMAKE_C_FLAGS_DEBUG} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELEASE			"${CMAKE_C_FLAGS_RELEASE} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")

	# MT MTD
	STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELEASE          ${CMAKE_C_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELWITHDEBINFO   ${CMAKE_C_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG            ${CMAKE_C_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG_INIT       ${CMAKE_C_FLAGS_DEBUG_INIT})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELEASE        ${CMAKE_CXX_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG          ${CMAKE_CXX_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG_INIT     ${CMAKE_CXX_FLAGS_DEBUG_INIT})
ENDIF(MSVC)

# APPLEÏÂOpenGLESÖ»ÎªIOSÆ½Ì¨¹¹½¨
IF(APPLE)
	SET(OPENGLES_INCLUDE_DIR ${CMAKE_OSX_SYSROOT}/System/Library/Frameworks/OpenGLES.framework/Headers)
	SET(OPENGLES_LIBRARY_DIR ${CMAKE_OSX_SYSROOT}/System/Library/Frameworks/OpenGLES.framework)
	MESSAGE(STATUS "OpenGLESÿ")	
	MESSAGE(STATUS "OpenGLES Include Directory:" ${OPENGLES_INCLUDE_DIR})
	MESSAGE(STATUS "OpenGLES Library Directory:" ${OPENGLES_LIBRARY_DIR})

	SET(QuartZCore_INCLUDE_DIR ${CMAKE_OSX_SYSROOT}/System/Library/Frameworks/QuartZCore.framework/Headers)
	SET(QuartZCore_LIBRARY_DIR ${CMAKE_OSX_SYSROOT}/System/Library/Frameworks/QuartZCore.framework)
	MESSAGE(STATUS "QuartZCoreÿ")	
	MESSAGE(STATUS "QuartZCore Include Directory:" ${QuartZCore_INCLUDE_DIR})
	MESSAGE(STATUS "QuartZCore Library Directory:" ${QuartZCore_LIBRARY_DIR})

	# ¸½¼Ó°üº¬Ä¿Â¼
	INCLUDE_DIRECTORIES(${OPENGLES_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${QuartZCore_INCLUDE_DIR})

	# ¸½¼Ó¿âÄ¿Â¼
	LINK_DIRECTORIES(${OPENGLES_LIBRARY_DIR}})
	LINK_DIRECTORIES(${QuartZCore_LIBRARY_DIR})
ENDIF()

# ÉèÖÃÄ£¿éÃû³Æ
SET(MODULE_NAME Plugin_OpenGLES)

# Ô´ÎÄ¼þÂ·¾¶
SET(MODULE_HEADER_PATH ${PROJECT_SOURCE_DIR}/Include/${MODULE_NAME})
SET(MODULE_SOURCE_PATH ${PROJECT_SOURCE_DIR}/Source/${MODULE_NAME})

# °üº¬Ô´ÎÄ¼þ
SET(MODULE_HEADER_FILES
	${MODULE_SOURCE_PATH}/OGLESFrameBuffer.h
	${MODULE_SOURCE_PATH}/OGLESGraphicsBuffer.h
	${MODULE_SOURCE_PATH}/OGLESMapping.h
	${MODULE_SOURCE_PATH}/OGLESPlatform.h
	${MODULE_SOURCE_PATH}/OGLESRenderDevice.h
	${MODULE_SOURCE_PATH}/OGLESRenderLayout.h
	${MODULE_SOURCE_PATH}/OGLESRenderMethod.h
	${MODULE_SOURCE_PATH}/OGLESRenderState.h
	${MODULE_SOURCE_PATH}/OGLESRenderView.h
	${MODULE_SOURCE_PATH}/OGLESRenderWindow.h
	${MODULE_SOURCE_PATH}/OGLESShaderVariable.h
	${MODULE_SOURCE_PATH}/OGLESTexture.h
	${MODULE_SOURCE_PATH}/OGLESTypedefs.h
)

IF(WIN32)	
	SET(MODULE_OGLESRENDERWINDOW_FILE ${MODULE_SOURCE_PATH}/OGLESRenderWindow.cpp)
ELSE()
	SET(MODULE_OGLESRENDERWINDOW_FILE ${MODULE_SOURCE_PATH}/OGLESRenderWindow.mm)
ENDIF()	

SET(MODULE_SOURCE_FILES
	${MODULE_SOURCE_PATH}/OGLESFrameBuffer.cpp
	${MODULE_SOURCE_PATH}/OGLESGraphicsBuffer.cpp
	${MODULE_SOURCE_PATH}/OGLESMapping.cpp
	${MODULE_SOURCE_PATH}/OGLESRenderDevice.cpp
	${MODULE_SOURCE_PATH}/OGLESRenderLayout.cpp
	${MODULE_SOURCE_PATH}/OGLESRenderMethod.cpp
	${MODULE_SOURCE_PATH}/OGLESRenderState.cpp
	${MODULE_SOURCE_PATH}/OGLESRenderView.cpp
	${MODULE_SOURCE_PATH}/OGLESTexture.cpp
	${MODULE_SOURCE_PATH}/OGLESTexture2D.cpp
	${MODULE_OGLESRENDERWINDOW_FILE}
)

SET(MODULE_ENTRY_FILES
	${MODULE_SOURCE_PATH}/DllEntry.cpp
)

SOURCE_GROUP("Header Files" FILES ${MODULE_HEADER_FILES})
SOURCE_GROUP("Source Files" FILES ${MODULE_SOURCE_FILES})
SOURCE_GROUP(""				FILES ${MODULE_ENTRY_FILES})

# Ìí¼Ó¿â
IF(WIN32)
	# ÉèÖÃ¿âÖ´ÐÐ³ÌÐòÉú³ÉÂ·¾¶
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/Bin)

	ADD_LIBRARY(${MODULE_NAME} SHARED  ${MODULE_HEADER_FILES} ${MODULE_SOURCE_FILES} ${MODULE_ENTRY_FILES})	
ENDIF(WIN32)	
IF(APPLE)
	ADD_LIBRARY(${MODULE_NAME} ${MODULE_HEADER_FILES} ${MODULE_SOURCE_FILES} ${MODULE_ENTRY_FILES})
ENDIF(APPLE)

IF(MSVC)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} AresCore libGLES20)
ENDIF(MSVC)

# ÉèÖÃÊôÐÔ
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "Engine")