# 库依赖
#FIND_PACKAGE(Boost 1.5.2 REQUIRED)

# 附加包含目录
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Include)

# 设置模块名称
SET(MODULE_NAME Plugin_D3D11)

# 源文件路径
SET(MODULE_HEADER_PATH ${PROJECT_SOURCE_DIR}/Include/${MODULE_NAME})
SET(MODULE_SOURCE_PATH ${PROJECT_SOURCE_DIR}/Source/${MODULE_NAME})

# 添加预编译宏定义
IF(WIN32)
	ADD_DEFINITIONS(-DPLATFORM_WIN32)
ELSEIF(APPLE)
	IF(${CMAKE_OSX_SYSROOT} MATCHES "MacOSX.platform")
		ADD_DEFINITIONS(-DPLATFORM_MAC)
	ELSE()
		ADD_DEFINITIONS(-DPLATFORM_IOS)
	ENDIF()
ENDIF()

ADD_DEFINITIONS(-DD3D11_EXPORTS)

# VS配置 http://www.oschina.net/code/explore/mariadb-5.2.4/CMakeLists.txt
IF(MSVC)
	# 禁用特定警告
	SET(CMAKE_CXX_FLAGS_DEBUG			"${CMAKE_CXX_FLAGS_DEBUG} /wd4996 /wd4819 /MP")
    SET(CMAKE_CXX_FLAGS_RELEASE			"${CMAKE_CXX_FLAGS_RELEASE} /wd4996 /wd4819 /MP")
    SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO	"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_DEBUG				"${CMAKE_C_FLAGS_DEBUG} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELEASE			"${CMAKE_C_FLAGS_RELEASE} /wd4996 /wd4819")
    SET(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO} /wd4996 /wd4819")

	# MT MTD
	STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELEASE          ${CMAKE_C_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_C_FLAGS_RELWITHDEBINFO   ${CMAKE_C_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG            ${CMAKE_C_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_C_FLAGS_DEBUG_INIT       ${CMAKE_C_FLAGS_DEBUG_INIT})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELEASE        ${CMAKE_CXX_FLAGS_RELEASE})
    STRING(REPLACE "/MD"  "/MT"  CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG          ${CMAKE_CXX_FLAGS_DEBUG})
    STRING(REPLACE "/MDd" "/MTd" CMAKE_CXX_FLAGS_DEBUG_INIT     ${CMAKE_CXX_FLAGS_DEBUG_INIT})
ENDIF(MSVC)

# 包含源文件
SET(MODULE_HEADER_FILES
	${MODULE_SOURCE_PATH}/D3D11Adapter.h
	${MODULE_SOURCE_PATH}/D3D11AdapterList.h
	${MODULE_SOURCE_PATH}/D3D11FrameBuffer.h
	${MODULE_SOURCE_PATH}/D3D11GraphicsBuffer.h
	${MODULE_SOURCE_PATH}/D3D11Mapping.h
	${MODULE_SOURCE_PATH}/D3D11RenderDevice.h
	${MODULE_SOURCE_PATH}/D3D11RenderLayout.h
	${MODULE_SOURCE_PATH}/D3D11RenderMethod.h
	${MODULE_SOURCE_PATH}/D3D11RenderState.h
	${MODULE_SOURCE_PATH}/D3D11RenderView.h
	${MODULE_SOURCE_PATH}/D3D11RenderWindow.h
	${MODULE_SOURCE_PATH}/D3D11ShaderDesc.h
	${MODULE_SOURCE_PATH}/D3D11Texture.h
	${MODULE_SOURCE_PATH}/D3D11Typedefs.h
	${MODULE_SOURCE_PATH}/D3D11VideoMode.h
)

SET(MODULE_SOURCE_FILES
	${MODULE_SOURCE_PATH}/D3D11Adapter.cpp
	${MODULE_SOURCE_PATH}/D3D11AdapterList.cpp
	${MODULE_SOURCE_PATH}/D3D11FrameBuffer.cpp
	${MODULE_SOURCE_PATH}/D3D11GraphicsBuffer.cpp
	${MODULE_SOURCE_PATH}/D3D11Mapping.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderDevice.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderLayout.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderMethod.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderState.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderView.cpp
	${MODULE_SOURCE_PATH}/D3D11RenderWindow.cpp
	${MODULE_SOURCE_PATH}/D3D11Texture.cpp
	${MODULE_SOURCE_PATH}/D3D11Texture1D.cpp
	${MODULE_SOURCE_PATH}/D3D11Texture2D.cpp
	${MODULE_SOURCE_PATH}/D3D11Texture3D.cpp
	${MODULE_SOURCE_PATH}/D3D11TextureCube.cpp
	${MODULE_SOURCE_PATH}/D3D11VideoMode.cpp
)
SET(MODULE_ENTRY_FILES
	${MODULE_SOURCE_PATH}/DllEntry.cpp
)
SOURCE_GROUP("Source Files" FILES ${MODULE_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${MODULE_HEADER_FILES})
SOURCE_GROUP(""				FILES ${MODULE_ENTRY_FILES})

# 设置库执行程序生成路径
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/Bin)

# 添加库
ADD_LIBRARY(${MODULE_NAME} SHARED
	${MODULE_HEADER_FILES}
	${MODULE_SOURCE_FILES}
	${MODULE_ENTRY_FILES}
)

IF(MSVC)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} dxgi dxguid d3d11 AresCore)
	TARGET_LINK_LIBRARIES(${MODULE_NAME} debug d3dx11d  optimized d3dx11)
ENDIF(MSVC)

# 设置属性
SET_TARGET_PROPERTIES(${MODULE_NAME} PROPERTIES FOLDER "Engine")